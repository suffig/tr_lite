const k="alcoholCalculatorValues",m="1.0",d=()=>({aekPlayer:"",realPlayer:"",aekGoals:0,realGoals:0,mode:"manual",gameDay:new Date().toISOString().split("T")[0],beerCount:{aek:0,real:0},cumulativeShots:{aek:0,real:0,total:0,lastMatchId:null,lastUpdated:null},lastUpdated:new Date().toISOString(),drinkingStartTime:null,version:m}),h=()=>{try{const t=localStorage.getItem(k);if(!t)return d();const e=JSON.parse(t);if(!e.version||e.version!==m)return console.log("Alcohol calculator: Version mismatch, using defaults"),d();const a=d();return{...a,...e,beerCount:{...a.beerCount,...e.beerCount||{}},cumulativeShots:{...a.cumulativeShots,...e.cumulativeShots||{}}}}catch(t){return console.error("Error loading alcohol calculator values:",t),d()}},y=t=>{try{const e={...t,lastUpdated:new Date().toISOString(),version:m};return localStorage.setItem(k,JSON.stringify(e)),typeof window<"u"&&window.dispatchEvent(new CustomEvent("alcoholCalculatorValuesChanged",{detail:e})),!0}catch(e){return console.error("Error saving alcohol calculator values:",e),!1}},D=(t,e)=>{const a={...e,...t,lastUpdated:new Date().toISOString()};return t.beerCount&&(a.beerCount={...e.beerCount,...t.beerCount}),t.cumulativeShots&&(a.cumulativeShots={...e.cumulativeShots,...t.cumulativeShots}),y(a),a},G=t=>{const e={...t,drinkingStartTime:new Date().toISOString(),lastUpdated:new Date().toISOString()};return y(e),e},A=t=>{if(!t.drinkingStartTime)return 0;try{const e=new Date(t.drinkingStartTime);return(new Date-e)/36e5}catch(e){return console.error("Error calculating time since drinking started:",e),0}},F=(t,e=null)=>{try{const a=e||h();if(!t||!Array.isArray(t))return console.warn("Invalid matches array provided to updateCumulativeShotsFromMatches"),a;let s=0,c=0;const l=t.slice().sort((n,u)=>{const r=new Date(n.date||0),i=new Date(u.date||0);return r-i}),o={};l.forEach(n=>{const r=new Date(n.date||0).toDateString();o[r]||(o[r]=[]),o[r].push(n)}),Object.keys(o).forEach(n=>{const u=o[n];let r=0,i=0,g=0,v=0;u.forEach(f=>{const I=f.goalsa||0,T=f.goalsb||0;r+=I,i+=T;const w=Math.floor(i/2),p=Math.floor(r/2),b=(w-g)*2,E=(p-v)*2;s+=b,c+=E,g=w,v=p})});const S=l.length>0?l[l.length-1]:null,C=S?S.id:null;return D({cumulativeShots:{aek:s,real:c,total:s+c,lastMatchId:C,lastUpdated:new Date().toISOString()}},a)}catch(a){return console.error("Error updating cumulative shots from matches:",a),e||h()}},M=(t,e=null)=>{try{const a=e||h();if(!t||typeof t!="object")return console.warn("Invalid match object provided to addShotsFromNewMatch"),a;const s=t.goalsa||0,c=t.goalsb||0,l=Math.floor(c/2)*2,o=Math.floor(s/2)*2;return D({cumulativeShots:{aek:a.cumulativeShots.aek+l,real:a.cumulativeShots.real+o,total:a.cumulativeShots.total+l+o,lastMatchId:t.id,lastUpdated:new Date().toISOString()}},a)}catch(a){return console.error("Error adding shots from new match:",a),e||h()}};typeof window<"u"&&(window.updateAlcoholCalculatorFromMatch=t=>{try{M(t)}catch(e){console.warn("Failed to update alcohol calculator from match:",e)}});export{D as a,M as b,A as g,h as l,G as s,F as u};
