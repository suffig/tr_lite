const A={auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0,storageKey:"supabase.auth.token",autoRefreshTokenRetryAttempts:5,tokenRefreshMargin:60},global:{headers:{"X-Client-Info":"fifa-tracker/1.0.0","X-Client-Version":"2.0.0"}},db:{schema:"public"},realtime:{params:{eventsPerSecond:10}}},q=()=>{let d=null,e=[],s=new Map,t="excellent";const n={players:[{id:1,name:"Max M√ºller",team:"AEK",position:"ST",value:12e4,goals:3,created_at:"2024-01-01"},{id:2,name:"Tom Schmidt",team:"AEK",position:"TH",value:1e5,goals:1,created_at:"2024-01-02"},{id:3,name:"Leon Wagner",team:"AEK",position:"IV",value:9e4,goals:1,created_at:"2024-01-03"},{id:4,name:"Tim Fischer",team:"AEK",position:"ZM",value:85e3,goals:1,created_at:"2024-01-04"},{id:5,name:"Jan Becker",team:"Real",position:"ST",value:11e4,goals:4,created_at:"2024-01-05"},{id:6,name:"Paul Klein",team:"Real",position:"TH",value:95e3,goals:1,created_at:"2024-01-06"},{id:7,name:"Lukas Wolf",team:"Real",position:"IV",value:88e3,goals:1,created_at:"2024-01-07"},{id:8,name:"Ben Richter",team:"Real",position:"ZM",value:92e3,goals:1,created_at:"2024-01-08"},{id:9,name:"Alex Weber",team:"Ehemalige",position:"ST",value:75e3,goals:2,created_at:"2024-01-09"},{id:10,name:"Chris Meyer",team:"Ehemalige",position:"ZM",value:7e4,goals:0,created_at:"2024-01-10"}],matches:[{id:1,teama:"AEK",teamb:"Real",goalsa:2,goalsb:1,date:"2024-08-12",created_at:"2024-08-12",manofthematch:"Max M√ºller",goalslista:["Max M√ºller","Tom Schmidt"],goalslistb:["Jan Becker"]},{id:2,teama:"AEK",teamb:"Real",goalsa:1,goalsb:3,date:"2024-08-10",created_at:"2024-08-10",manofthematch:"Jan Becker",goalslista:["Leon Wagner"],goalslistb:["Jan Becker","Paul Klein","Lukas Wolf"]},{id:3,teama:"AEK",teamb:"Real",goalsa:0,goalsb:2,date:"2024-08-08",created_at:"2024-08-08",manofthematch:"Ben Richter",goalslista:[],goalslistb:["Jan Becker","Ben Richter"]},{id:4,teama:"AEK",teamb:"Real",goalsa:2,goalsb:2,date:"2024-08-05",created_at:"2024-08-05",manofthematch:"Max M√ºller",goalslista:["Max M√ºller","Tim Fischer"],goalslistb:["Jan Becker","Paul Klein"]}],bans:[{id:1,player_id:1,matches_remaining:2,reason:"Gelb-Rot Karte",created_at:"2024-08-01"},{id:2,player_id:5,matches_remaining:1,reason:"Unsportlichkeit",created_at:"2024-08-05"}],transactions:[{id:1,amount:-5e4,info:"Spielerkauf: Max M√ºller",team:"AEK",date:"2024-08-10",type:"Spielerkauf",match_id:null},{id:2,amount:3e4,info:"Spielerverkauf: Klaus Meyer",team:"AEK",date:"2024-08-11",type:"Spielerverkauf",match_id:null},{id:3,amount:-45e3,info:"Spielerkauf: Jan Becker",team:"Real",date:"2024-08-10",type:"Spielerkauf",match_id:null},{id:4,amount:25e3,info:"Sponsoring Einnahme",team:"Real",date:"2024-08-11",type:"Sonstiges",match_id:null},{id:5,amount:5e3,info:"Match-Sieg Preisgeld",team:"AEK",date:"2024-08-12",type:"Preisgeld",match_id:1},{id:6,amount:3e3,info:"Match-Niederlage Preisgeld",team:"Real",date:"2024-08-12",type:"Preisgeld",match_id:1},{id:7,amount:1500,info:"SdS Bonus: Max M√ºller",team:"AEK",date:"2024-08-12",type:"SdS Bonus",match_id:1},{id:8,amount:2e3,info:"Liga-Bonus",team:"AEK",date:"2024-08-13",type:"Sonstiges",match_id:null},{id:9,amount:-1e3,info:"Kartenstrafe",team:"Real",date:"2024-08-13",type:"Strafe",match_id:null},{id:10,amount:3e3,info:"Match-Niederlage Preisgeld",team:"AEK",date:"2024-08-10",type:"Preisgeld",match_id:2},{id:11,amount:5e3,info:"Match-Sieg Preisgeld",team:"Real",date:"2024-08-10",type:"Preisgeld",match_id:2},{id:12,amount:1500,info:"SdS Bonus: Jan Becker",team:"Real",date:"2024-08-10",type:"SdS Bonus",match_id:2},{id:13,amount:3e3,info:"Match-Niederlage Preisgeld",team:"AEK",date:"2024-08-08",type:"Preisgeld",match_id:3},{id:14,amount:5e3,info:"Match-Sieg Preisgeld",team:"Real",date:"2024-08-08",type:"Preisgeld",match_id:3},{id:15,amount:1500,info:"SdS Bonus: Ben Richter",team:"Real",date:"2024-08-08",type:"SdS Bonus",match_id:3},{id:16,amount:4e3,info:"Unentschieden Preisgeld",team:"AEK",date:"2024-08-05",type:"Preisgeld",match_id:4},{id:17,amount:4e3,info:"Unentschieden Preisgeld",team:"Real",date:"2024-08-05",type:"Preisgeld",match_id:4},{id:18,amount:1500,info:"SdS Bonus: Max M√ºller",team:"AEK",date:"2024-08-05",type:"SdS Bonus",match_id:4}],finances:[{id:1,team:"AEK",balance:15e4,debt:0,created_at:"2024-01-01"},{id:2,team:"Real",balance:175e3,debt:0,created_at:"2024-01-01"}],spieler_des_spiels:[{id:1,name:"Max M√ºller",team:"AEK",count:3,created_at:"2024-08-01"},{id:2,name:"Jan Becker",team:"Real",count:2,created_at:"2024-08-05"},{id:3,name:"Tom Schmidt",team:"AEK",count:2,created_at:"2024-08-08"},{id:4,name:"Paul Klein",team:"Real",count:1,created_at:"2024-08-10"},{id:5,name:"Leon Wagner",team:"AEK",count:1,created_at:"2024-08-12"},{id:6,name:"Lukas Wolf",team:"Real",count:0,created_at:"2024-08-13"},{id:7,name:"Tim Fischer",team:"AEK",count:0,created_at:"2024-08-13"},{id:8,name:"Ben Richter",team:"Real",count:0,created_at:"2024-08-13"}]},i=(a,o={})=>{let h=[...n[a]||[]];if(o.eq){const[u,r]=o.eq;h=h.filter(l=>l[u]===r)}if(o.neq){const[u,r]=o.neq;h=h.filter(l=>l[u]!==r)}if(o.gt){const[u,r]=o.gt;h=h.filter(l=>l[u]>r)}if(o.gte){const[u,r]=o.gte;h=h.filter(l=>l[u]>=r)}if(o.lt){const[u,r]=o.lt;h=h.filter(l=>l[u]<r)}if(o.lte){const[u,r]=o.lte;h=h.filter(l=>l[u]<=r)}if(o.like){const[u,r]=o.like,l=new RegExp(r.replace(/%/g,".*"),"i");h=h.filter(m=>l.test(m[u]))}if(o.in){const[u,r]=o.in;h=h.filter(l=>r.includes(l[u]))}if(o.order){const[u,r="asc"]=o.order;h.sort((l,m)=>r==="desc"?m[u]>l[u]?1:-1:l[u]>m[u]?1:-1)}if(o.range){const[u,r]=o.range;h=h.slice(u,r+1)}else o.limit&&(h=h.slice(0,o.limit));return h};return{auth:{getSession:()=>{if(!d)try{const a=localStorage.getItem("supabase.auth.token");if(a){const o=JSON.parse(a);o.expires_at&&o.expires_at>Date.now()/1e3?(d=o,console.log("‚úÖ Restored demo session from localStorage")):(localStorage.removeItem("supabase.auth.token"),console.log("üîÑ Demo session expired, removed from localStorage"))}}catch(a){console.warn("Could not restore demo session:",a),localStorage.removeItem("supabase.auth.token")}return Promise.resolve({data:{session:d}})},onAuthStateChange:a=>(console.warn("Supabase auth not available - using fallback"),e.push(a),setTimeout(()=>a(d?"SIGNED_IN":"SIGNED_OUT",d),100),{data:{subscription:{unsubscribe:()=>{e=e.filter(o=>o!==a)}}}}),signInWithPassword:({email:a,password:o})=>{console.warn("‚ö†Ô∏è Supabase signInWithPassword not available - using enhanced fallback demo auth");const h=100;return new Promise(u=>{setTimeout(()=>{if(!a||!o){u({error:new Error("E-Mail und Passwort sind erforderlich.")});return}if(!a.includes("@")){u({error:new Error("Bitte geben Sie eine g√ºltige E-Mail-Adresse ein.")});return}if(o.length<3){u({error:new Error("Passwort zu kurz (mindestens 3 Zeichen f√ºr Demo).")});return}d={user:{id:"demo-user-"+Date.now(),email:a,created_at:new Date().toISOString(),app_metadata:{provider:"demo",providers:["demo"]},user_metadata:{demo_mode:!0,connection_quality:t},aud:"authenticated",role:"authenticated"},access_token:"demo-token-"+Date.now(),refresh_token:"demo-refresh-"+Date.now(),expires_at:Date.now()/1e3+3600,expires_in:3600,token_type:"bearer"};try{localStorage.setItem("supabase.auth.token",JSON.stringify(d))}catch(r){console.warn("Could not persist demo session:",r)}e.forEach(r=>{setTimeout(()=>r("SIGNED_IN",d),50)}),u({data:{user:d.user,session:d},error:null})},h)})},signUp:({email:a,password:o})=>(console.warn("Supabase signUp not available - using fallback demo mode"),!a||!o?Promise.resolve({error:new Error("E-Mail und Passwort sind erforderlich.")}):o.length<6?Promise.resolve({error:new Error("Passwort muss mindestens 6 Zeichen haben.")}):Promise.resolve({data:{user:null,session:null},error:null})),signOut:()=>(console.warn("‚ö†Ô∏è Supabase signOut not available - using enhanced fallback"),new Promise(a=>{d=null;try{localStorage.removeItem("supabase.auth.token")}catch(o){console.warn("Could not clear stored session:",o)}e.forEach(o=>{setTimeout(()=>o("SIGNED_OUT",null),50)}),a({error:null})}))},from:a=>{let o={};const h=()=>{const r=i(a,o);return o={},Promise.resolve({data:r,error:null})},u={select:(r="*")=>u,eq:(r,l)=>(o.eq=[r,l],u),neq:(r,l)=>(o.neq=[r,l],u),gt:(r,l)=>(o.gt=[r,l],u),gte:(r,l)=>(o.gte=[r,l],u),lt:(r,l)=>(o.lt=[r,l],u),lte:(r,l)=>(o.lte=[r,l],u),like:(r,l)=>(o.like=[r,l],u),in:(r,l)=>(o.in=[r,l],u),order:(r,l={})=>(o.order=[r,l.ascending===!1?"desc":"asc"],u),range:(r,l)=>(o.range=[r,l],u),limit:r=>(o.limit=r,u),onConflict:r=>u,single:()=>{const r=i(a,o);o={};const l=r.length>0?r[0]:null;return Promise.resolve({data:l,error:null})},maybeSingle:()=>{const r=i(a,o);o={};const l=r.length>0?r[0]:null;return Promise.resolve({data:l,error:null})},then:(r,l)=>{h().then(r,l)},catch:r=>{h().catch(r)},finally:r=>{h().finally(r)},insert:r=>{console.warn("Supabase insert not available in demo mode - simulating success");const m={id:Math.max(...(n[a]||[]).map(f=>f.id||0))+1,...r,created_at:new Date().toISOString()};return n[a]&&n[a].push(m),{select:(f="*")=>(console.warn("Supabase insert().select() not available in demo mode - simulating success"),{single:()=>(console.warn("Supabase insert().select().single() not available in demo mode - simulating success"),Promise.resolve({data:m,error:null})),then:(p,w)=>{Promise.resolve({data:[m],error:null}).then(p,w)},catch:p=>{Promise.resolve({data:[m],error:null}).catch(p)},finally:p=>{Promise.resolve({data:[m],error:null}).finally(p)}}),single:()=>(console.warn("Supabase insert().single() not available in demo mode - simulating success"),Promise.resolve({data:m,error:null})),then:(f,p)=>{Promise.resolve({data:[m],error:null}).then(f,p)},catch:f=>{Promise.resolve({data:[m],error:null}).catch(f)},finally:f=>{Promise.resolve({data:[m],error:null}).finally(f)}}},update:r=>(console.warn("Supabase update not available in demo mode - simulating success"),{eq:(l,m)=>{console.warn("Supabase update().eq() not available in demo mode - simulating success");const f=i(a,o);o={};const p=f.filter(w=>w[l]===m);return p.forEach(w=>{Object.assign(w,r)}),Promise.resolve({data:p,error:null})},then:(l,m)=>{const f=i(a,o);o={},f.forEach(p=>{Object.assign(p,r)}),Promise.resolve({data:f,error:null}).then(l,m)},catch:l=>{const m=i(a,o);o={},m.forEach(f=>{Object.assign(f,r)}),Promise.resolve({data:m,error:null}).catch(l)},finally:l=>{const m=i(a,o);o={},m.forEach(f=>{Object.assign(f,r)}),Promise.resolve({data:m,error:null}).finally(l)}}),delete:()=>{console.warn("Supabase delete not available in demo mode - simulating success");const r=i(a,o);return o={},n[a]&&r.length>0&&(n[a]=n[a].filter(l=>!r.some(m=>m.id===l.id))),Promise.resolve({data:r,error:null})}};return u},channel:(a="default")=>{console.warn("‚ö†Ô∏è Supabase realtime not available - using enhanced fallback simulation");let o=[],h=!1;const u={on:(r,l,m)=>(console.log(`üì° Simulating real-time subscription for ${r} on ${(l==null?void 0:l.table)||"unknown table"}`),o.push({event:r,config:l,callback:m,id:Math.random().toString(36).substr(2,9)}),u),subscribe:r=>{if(console.log("üì° Simulating subscription activation..."),h=!0,s.set(a,{subscriptions:o,isActive:!0,created:Date.now()}),setTimeout(()=>{typeof r=="function"&&r("SUBSCRIBING")},50),setTimeout(()=>{typeof r=="function"&&(r("SUBSCRIBED"),console.log("‚úÖ Real-time subscription simulation active"))},100),o.some(l=>{var m;return(m=l.config)==null?void 0:m.table})){const l=setInterval(()=>{if(!h){clearInterval(l);return}Math.random()<.1&&o.forEach(m=>{var f;if((f=m.config)!=null&&f.table&&typeof m.callback=="function"){const p={eventType:["INSERT","UPDATE","DELETE"][Math.floor(Math.random()*3)],new:{id:Math.floor(Math.random()*1e3),updated_at:new Date().toISOString()},old:{},table:m.config.table,schema:"public",commit_timestamp:new Date().toISOString()};console.log("üì° Simulated real-time update:",p),m.callback(p)}})},5e3)}return u},unsubscribe:()=>(console.log("üì° Unsubscribing from real-time channel simulation"),h=!1,s.delete(a),Promise.resolve({error:null}))};return u},removeChannel:a=>(console.log("üì° Removing real-time channel simulation"),a&&typeof a.unsubscribe=="function"&&a.unsubscribe(),Promise.resolve({error:null}))}};var E,k;const S=typeof process<"u"&&((E=process==null?void 0:process.env)==null?void 0:E.VITE_SUPABASE_URL)||typeof process<"u"&&((k=process==null?void 0:process.env)==null?void 0:k.REACT_APP_SUPABASE_URL)||"https://buduldeczjwnjvsckqat.supabase.co";var T,C;const v=typeof process<"u"&&((T=process==null?void 0:process.env)==null?void 0:T.VITE_SUPABASE_ANON_KEY)||typeof process<"u"&&((C=process==null?void 0:process.env)==null?void 0:C.REACT_APP_SUPABASE_ANON_KEY)||"sb_publishable_wcOHaKNEW9rQ3anrRNlEpA_r1_wGda3";let g,y=!1;async function D(){const d=["https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/dist/umd/supabase.min.js","https://unpkg.com/@supabase/supabase-js@2/dist/umd/supabase.min.js","https://cdn.skypack.dev/@supabase/supabase-js@2"];for(const e of d)try{console.log(`üîÑ Attempting to load Supabase from: ${e}`);const s=document.createElement("script");s.src=e,s.crossOrigin="anonymous";const t=new Promise((n,i)=>{s.onload=()=>{const c=window.supabase||window.Supabase||window.supabaseJs;c&&c.createClient?(console.log(`‚úÖ Successfully loaded Supabase from: ${e}`),window.supabase=c,n(!0)):i(new Error("Supabase object not found after loading"))},s.onerror=()=>i(new Error(`Failed to load script from ${e}`)),setTimeout(()=>i(new Error(`Timeout loading from ${e}`)),5e3)});return document.head.appendChild(s),await t,s.remove(),!0}catch(s){console.warn(`‚ùå Failed to load from ${e}:`,s.message),document.querySelectorAll(`script[src="${e}"]`).forEach(n=>n.remove())}throw new Error("All CDN sources failed to load")}async function R(){try{const d=window.supabase||window.Supabase||window.supabaseJs;(!d||!d.createClient)&&await D();const e=window.supabase||window.Supabase||window.supabaseJs;if(!e||!e.createClient)throw new Error("Failed to load Supabase library from CDN");console.log("üîÑ Creating Supabase client with credentials..."),console.log("URL:",S),console.log("Key:",v.substring(0,20)+"..."),g=e.createClient(S,v,A);try{const{data:s,error:t}=await g.from("players").select("id").limit(1);t?console.warn("Database test query failed:",t.message):console.log("‚úÖ Database connection test successful")}catch(s){console.warn("Database connection test failed:",s.message)}console.log("‚úÖ Supabase client created successfully"),y=!1;return}catch(d){console.warn("‚ö†Ô∏è Failed to connect to Supabase, using fallback mode:",d.message),console.log("üìù Fallback mode provides demo data and simulated database operations"),y=!0,g=q()}}try{const d=window.supabase||window.Supabase||window.supabaseJs;if(d&&d.createClient)console.log("üîÑ Creating Supabase client..."),g=d.createClient(S,v,A),console.log("‚úÖ Supabase client created successfully"),y=!1;else throw new Error("Supabase library not available (CDN may be blocked)")}catch(d){console.warn("‚ö†Ô∏è Initial Supabase connection failed, using fallback:",d.message),console.log("üìù Will attempt CDN loading and retry automatically..."),y=!0,g=q()}typeof window<"u"&&(window.initializeSupabase=R,y&&(console.log("üîÑ Scheduling automatic retry of Supabase initialization..."),setTimeout(async()=>{try{console.log("üîÑ Retrying Supabase initialization..."),await R(),y||(console.log("‚úÖ Supabase initialization successful on retry"),window.dispatchEvent(new CustomEvent("supabase-reconnected",{detail:{timestamp:new Date().toISOString()}})))}catch{console.log("üîÑ Retry failed, staying in fallback mode")}},5e3)));class _{constructor(e){this.client=e,this.maxRetries=3,this.baseDelay=1e3,this.maxDelay=3e4,this.connectionStats={totalRequests:0,successfulRequests:0,failedRequests:0,averageResponseTime:0,lastResponseTime:0},this.requestQueue=[],this.isProcessingQueue=!1,this.maxConcurrentRequests=5,this.activeRequests=0}getStats(){return{...this.connectionStats,successRate:this.connectionStats.totalRequests>0?(this.connectionStats.successfulRequests/this.connectionStats.totalRequests*100).toFixed(2)+"%":"0%",activeRequests:this.activeRequests,queuedRequests:this.requestQueue.length}}resetStats(){this.connectionStats={totalRequests:0,successfulRequests:0,failedRequests:0,averageResponseTime:0,lastResponseTime:0}}async retryOperation(e,s=this.maxRetries,t="normal"){return new Promise((n,i)=>{const c={operation:e,maxRetries:s,priority:t,resolve:n,reject:i,timestamp:Date.now()};t==="high"?this.requestQueue.unshift(c):this.requestQueue.push(c),this.processQueue()})}async processQueue(){if(!(this.isProcessingQueue||this.activeRequests>=this.maxConcurrentRequests)){for(this.isProcessingQueue=!0;this.requestQueue.length>0&&this.activeRequests<this.maxConcurrentRequests;){const e=this.requestQueue.shift();this.executeRequest(e)}this.isProcessingQueue=!1}}async executeRequest(e){this.activeRequests++,this.connectionStats.totalRequests++;const s=performance.now();let t=null;try{for(let n=1;n<=e.maxRetries;n++)try{const i=await e.operation();if(i.error)throw i.error;const c=performance.now()-s;this.updateResponseTimeMetrics(c),this.connectionStats.successfulRequests++,e.resolve(i);return}catch(i){if(t=i,console.warn(`Database operation failed (attempt ${n}/${e.maxRetries}):`,i),this.isNonRetryableError(i)||n===e.maxRetries)break;const c=Math.min(this.baseDelay*Math.pow(2,n-1),this.maxDelay),a=Math.random()*.1*c,o=c+a;await new Promise(h=>setTimeout(h,o))}this.connectionStats.failedRequests++,e.reject(t)}catch(n){this.connectionStats.failedRequests++,e.reject(n)}finally{this.activeRequests--,setTimeout(()=>this.processQueue(),0)}}updateResponseTimeMetrics(e){this.connectionStats.lastResponseTime=e,this.connectionStats.averageResponseTime===0?this.connectionStats.averageResponseTime=e:this.connectionStats.averageResponseTime=this.connectionStats.averageResponseTime*.8+e*.2}isNonRetryableError(e){if(!e)return!1;const s=e.message?e.message.toLowerCase():"",t=e.code;return!!(s.includes("auth")||s.includes("unauthorized")||s.includes("forbidden")||t==="PGRST301"||t==="PGRST116"||t==="23505"||t==="23503"||e.status&&e.status>=400&&e.status<500)}async select(e,s="*",t={},n="normal"){if(!e)throw new Error("Table name is required");return this.retryOperation(async()=>{let i=this.client.from(e).select(s);return t.eq&&Object.entries(t.eq).forEach(([c,a])=>{a!=null&&(i=i.eq(c,a))}),t.neq&&Object.entries(t.neq).forEach(([c,a])=>{i=i.neq(c,a)}),t.gt&&Object.entries(t.gt).forEach(([c,a])=>{i=i.gt(c,a)}),t.gte&&Object.entries(t.gte).forEach(([c,a])=>{i=i.gte(c,a)}),t.lt&&Object.entries(t.lt).forEach(([c,a])=>{i=i.lt(c,a)}),t.lte&&Object.entries(t.lte).forEach(([c,a])=>{i=i.lte(c,a)}),t.like&&Object.entries(t.like).forEach(([c,a])=>{i=i.like(c,a)}),t.in&&Object.entries(t.in).forEach(([c,a])=>{Array.isArray(a)&&a.length>0&&(i=i.in(c,a))}),t.order&&(Array.isArray(t.order)?t.order.forEach(c=>{i=i.order(c.column,{ascending:c.ascending??!0})}):i=i.order(t.order.column,{ascending:t.order.ascending??!0})),t.limit&&(i=i.limit(Math.min(t.limit,1e3))),t.range&&(i=i.range(t.range.from,t.range.to)),await i},this.maxRetries,n)}async insert(e,s,t={},n="normal"){if(!e)throw new Error("Table name is required");if(!s)throw new Error("Data is required for insert");return this.retryOperation(async()=>{let i=this.client.from(e).insert(s);return t.returning!==!1&&(i=i.select()),t.onConflict&&(i=i.onConflict(t.onConflict)),await i},this.maxRetries,n)}async update(e,s,t={},n={},i="normal"){if(!e)throw new Error("Table name is required");if(!s)throw new Error("Data is required for update");if(Object.keys(t).length===0)throw new Error("At least one condition is required for update");return this.retryOperation(async()=>{let c=this.client.from(e).update(s);return Object.entries(t).forEach(([a,o])=>{o!=null&&(c=c.eq(a,o))}),n.returning!==!1&&(c=c.select()),await c},this.maxRetries,i)}async deleteRow(e,s={},t="normal"){if(!e)throw new Error("Table name is required");if(Object.keys(s).length===0)throw new Error("At least one condition is required for delete");return this.retryOperation(async()=>{let n=this.client.from(e).delete();return Object.entries(s).forEach(([i,c])=>{c!=null&&(n=n.eq(i,c))}),await n},this.maxRetries,t)}async upsert(e,s,t={},n="normal"){if(!e)throw new Error("Table name is required");if(!s)throw new Error("Data is required for upsert");return this.retryOperation(async()=>{let i=this.client.from(e).upsert(s);return t.onConflict&&(i=i.onConflict(t.onConflict)),t.returning!==!1&&(i=i.select()),await i},this.maxRetries,n)}async batchSelect(e){const s=e.map(n=>this.select(n.table,n.query,n.options,n.priority||"normal"));return(await Promise.allSettled(s)).map((n,i)=>({success:n.status==="fulfilled",data:n.status==="fulfilled"?n.value:null,error:n.status==="rejected"?n.reason:null,operation:e[i]}))}async healthCheck(){try{const e=await this.select("players","id",{limit:1},"high");return{healthy:!0,responseTime:this.connectionStats.lastResponseTime}}catch(e){return{healthy:!1,error:e.message}}}getClient(){return this.client}}const b=new _(g),{data:K}=g.auth.onAuthStateChange((d,e)=>{var t;const s=((t=e==null?void 0:e.user)==null?void 0:t.email)||"No user";console.log(`Auth state changed: ${d}`,s),d==="SIGNED_IN"?(console.log("‚úÖ User signed in successfully"),b.resetStats()):d==="SIGNED_OUT"?(console.log("üëã User signed out"),b.resetStats()):d==="TOKEN_REFRESHED"?e?console.log("üîÑ Auth token refreshed successfully"):(console.error("‚ùå Token refresh failed - user may need to re-authenticate"),window.dispatchEvent(new CustomEvent("supabase-session-expired",{detail:{timestamp:new Date().toISOString()}}))):d==="USER_UPDATED"?console.log("üë§ User profile updated"):d==="PASSWORD_RECOVERY"&&console.log("üîê Password recovery initiated"),window.dispatchEvent(new CustomEvent("auth-state-change",{detail:{event:d,session:e,user:e==null?void 0:e.user}}))});typeof window<"u"&&(window.supabase=g,window.supabaseDb=b,window.supabaseDebug={getStats:()=>b.getStats(),resetStats:()=>b.resetStats(),healthCheck:()=>b.healthCheck(),getQueueLength:()=>b.requestQueue.length,getActiveRequests:()=>b.activeRequests},(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1")&&setInterval(()=>{const d=b.getStats();d.totalRequests>0&&console.log("üìä Supabase Stats:",d)},6e4));class P{constructor(){this.slowQueryThreshold=2e3,this.slowQueries=[],this.maxSlowQueries=10}logSlowQuery(e,s,t,n){if(s>this.slowQueryThreshold){const i={operation:e,duration:Math.round(s),table:t,query:n||"N/A",timestamp:new Date().toISOString()};this.slowQueries.unshift(i),this.slowQueries.length>this.maxSlowQueries&&this.slowQueries.pop(),console.warn("üêå Slow database query detected:",i)}}getSlowQueries(){return this.slowQueries}clearSlowQueries(){this.slowQueries=[]}}const M=new P;typeof window<"u"&&(window.dbPerformanceMonitor=M);const x=4*60*1e3;class I{constructor(){this.isConnected=!0,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.maxReconnectDelay=3e4,this.healthCheckInterval=3e4,this.keepAliveTimer=null,this.healthCheckTimer=null,this.reconnectTimer=null,this.listeners=[],this.lastSuccessfulConnection=Date.now(),this.isPaused=!1,this.connectionType="unknown",this.lastError=null,this.connectionMetrics={totalConnections:0,successfulConnections:0,failedConnections:0,averageResponseTime:0,lastResponseTime:0},this.detectConnectionType(),this.startHealthCheck(),this.setupNetworkListeners(),this.startKeepAlive()}detectConnectionType(){y?(this.connectionType="fallback",console.log("üîÑ Connection type: Fallback mode (demo data)")):navigator.onLine?(this.connectionType="real",console.log("‚úÖ Connection type: Real database")):(this.connectionType="offline",this.isConnected=!1,console.log("üì¥ Connection type: Offline"))}addListener(e){this.listeners.push(e),setTimeout(()=>{e({connected:this.isConnected,connectionType:this.connectionType,metrics:this.connectionMetrics,lastError:this.lastError})},0)}removeListener(e){this.listeners=this.listeners.filter(s=>s!==e)}notifyListeners(e){const s={...e,connectionType:this.connectionType,metrics:this.connectionMetrics,timestamp:Date.now()};this.listeners.forEach(t=>{try{t(s)}catch(n){console.error("Error in connection listener:",n)}})}async checkConnection(){const e=performance.now();this.connectionMetrics.totalConnections++;try{if(y){const n=Math.random()*100+50;return this.updateMetrics(n,!0),this.isConnected||(console.log("üîÑ Demo mode - simulating connection restored"),this.isConnected=!0,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.lastSuccessfulConnection=Date.now(),this.lastError=null,this.notifyListeners({connected:!0,reconnected:!0,message:"Demo-Modus aktiv - Simulierte Daten verf√ºgbar"})),!0}if(!navigator.onLine)throw new Error("Keine Internetverbindung");const s=new AbortController,t=setTimeout(()=>s.abort(),1e4);try{const{data:n,error:i}=await g.from("players").select("id").limit(1).abortSignal(s.signal);if(clearTimeout(t),i)throw i;const c=performance.now()-e;return this.updateMetrics(c,!0),this.isConnected||(console.log("‚úÖ Database connection restored"),this.isConnected=!0,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.lastSuccessfulConnection=Date.now(),this.lastError=null,this.connectionType="real",this.notifyListeners({connected:!0,reconnected:!0,message:"Datenbankverbindung wiederhergestellt"})),!0}catch(n){throw clearTimeout(t),n.name==="AbortError"?new Error("Verbindungstest-Timeout (> 10s)"):n}}catch(s){return this.updateMetrics(performance.now()-e,!1),this.lastError=s,console.warn("‚ùå Database connection check failed:",s.message),this.isConnected&&(console.log("üì¥ Database connection lost"),this.isConnected=!1,this.connectionType=s.message.includes("Internetverbindung")?"offline":"disconnected",this.notifyListeners({connected:!1,error:s,message:this.getErrorMessage(s)})),!1}}updateMetrics(e,s){this.connectionMetrics.lastResponseTime=e,s?(this.connectionMetrics.successfulConnections++,this.connectionMetrics.averageResponseTime===0?this.connectionMetrics.averageResponseTime=e:this.connectionMetrics.averageResponseTime=this.connectionMetrics.averageResponseTime*.7+e*.3):this.connectionMetrics.failedConnections++}getErrorMessage(e){if(!e)return"Unbekannter Fehler";const s=e.message.toLowerCase();return s.includes("internetverbindung")||s.includes("network")?"Keine Internetverbindung":s.includes("timeout")?"Verbindungs-Timeout - Server antwortet nicht":s.includes("auth")||s.includes("unauthorized")?"Authentifizierungsfehler - Bitte neu anmelden":s.includes("cdn")||s.includes("blocked")?"CDN blockiert - Fallback-Modus wird verwendet":`Datenbankfehler: ${e.message}`}async attemptReconnection(){if(this.isPaused){console.log("‚è∏Ô∏è Skipping reconnection attempt - monitor is paused");return}if(this.reconnectAttempts>=this.maxReconnectAttempts){console.error("‚ùå Max reconnection attempts reached"),this.notifyListeners({connected:!1,maxAttemptsReached:!0,nextRetry:Date.now()+this.maxReconnectDelay,message:"Maximale Wiederverbindungsversuche erreicht - Warte l√§nger..."}),this.reconnectTimer=setTimeout(()=>{this.isPaused||(console.log("üîÑ Resetting reconnection attempts after extended wait"),this.reconnectAttempts=0,this.reconnectDelay=1e3,this.attemptReconnection())},this.maxReconnectDelay);return}if(this.reconnectAttempts++,console.log(`üîÑ Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`),!navigator.onLine){console.log("üì¥ Network is offline, waiting for network recovery..."),this.notifyListeners({connected:!1,networkOffline:!0,reconnecting:!1,message:"Warte auf Netzwerkverbindung..."}),this.reconnectAttempts--,this.reconnectTimer=setTimeout(()=>{this.isPaused||this.attemptReconnection()},5e3);return}if(!await this.checkConnection()&&!this.isPaused){const s=Math.min(this.reconnectDelay*2,this.maxReconnectDelay),t=Math.random()*.3*s;this.reconnectDelay=s+t,this.notifyListeners({connected:!1,reconnecting:!0,attempt:this.reconnectAttempts,nextRetry:Date.now()+this.reconnectDelay,message:`Wiederverbindung... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`}),this.reconnectTimer=setTimeout(()=>{this.isPaused||this.attemptReconnection()},this.reconnectDelay)}}startHealthCheck(){this.healthCheckTimer&&clearInterval(this.healthCheckTimer),this.healthCheckTimer=setInterval(async()=>{if(this.isPaused||!this.isConnected)return;await this.checkConnection()||this.attemptReconnection()},this.healthCheckInterval)}startKeepAlive(){this.keepAliveTimer&&clearInterval(this.keepAliveTimer),this.keepAliveTimer=setInterval(async()=>{if(!this.isPaused&&this.isConnected)try{await g.from("players").select("id").limit(1)}catch(e){console.warn("KeepAlive failed:",e.message)}},x)}stopKeepAlive(){this.keepAliveTimer&&(clearInterval(this.keepAliveTimer),this.keepAliveTimer=null)}pauseHealthChecks(){console.log("Pausing connection health checks"),this.isPaused=!0,this.healthCheckTimer&&(clearInterval(this.healthCheckTimer),this.healthCheckTimer=null),this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.stopKeepAlive()}resumeHealthChecks(){console.log("Resuming connection health checks"),this.isPaused=!1,this.startHealthCheck(),this.startKeepAlive(),this.isConnected||this.checkConnection()}setupNetworkListeners(){window.addEventListener("online",()=>{console.log("üåê Network connection restored"),this.connectionType=y?"fallback":"real",this.isConnected||(this.reconnectAttempts=0,this.reconnectDelay=1e3,this.checkConnection())}),window.addEventListener("offline",()=>{console.log("üì¥ Network connection lost"),this.isConnected=!1,this.connectionType="offline",this.lastError=new Error("Keine Internetverbindung"),this.notifyListeners({connected:!1,networkOffline:!0,message:"Netzwerkverbindung verloren"})}),window.addEventListener("supabase-session-expired",()=>{console.log("üîê Supabase session expired"),this.isConnected=!1,this.connectionType="expired",this.lastError=new Error("Session abgelaufen"),this.notifyListeners({connected:!1,sessionExpired:!0,message:"Session abgelaufen - Bitte neu anmelden"})}),document.addEventListener("visibilitychange",()=>{document.hidden?(console.log("üì± App hidden - reducing health check frequency"),this.healthCheckInterval=6e4):(console.log("üì± App visible - resuming normal health checks"),this.healthCheckInterval=3e4,this.startHealthCheck(),this.isPaused||this.checkConnection())})}getStatus(){return{connected:this.isConnected,connectionType:this.connectionType,reconnectAttempts:this.reconnectAttempts,maxReconnectAttempts:this.maxReconnectAttempts,lastSuccessfulConnection:this.lastSuccessfulConnection,timeSinceLastConnection:Date.now()-this.lastSuccessfulConnection,isPaused:this.isPaused,lastError:this.lastError,metrics:{...this.connectionMetrics,successRate:this.connectionMetrics.totalConnections>0?Math.round(this.connectionMetrics.successfulConnections/this.connectionMetrics.totalConnections*100):0},networkOnline:navigator.onLine,usingFallback:y}}getDiagnostics(){return{...this.getStatus(),timestamp:new Date().toISOString(),userAgent:navigator.userAgent,connectionSpeed:this.estimateConnectionSpeed(),recommendations:this.getRecommendations()}}estimateConnectionSpeed(){if(this.connectionMetrics.averageResponseTime===0)return"unknown";const e=this.connectionMetrics.averageResponseTime;return e<100?"fast":e<500?"medium":e<1e3?"slow":"very-slow"}getRecommendations(){const e=[];return this.isConnected||(navigator.onLine?this.connectionType==="fallback"?(e.push("CDN ist blockiert - Demo-Modus wird verwendet"),e.push("Konfigurieren Sie Supabase-Credentials f√ºr echte Datenbankverbindung")):this.connectionType==="expired"?e.push("Melden Sie sich erneut an"):e.push("Server tempor√§r nicht erreichbar - Wiederverbindung l√§uft..."):e.push("√úberpr√ºfen Sie Ihre Internetverbindung")),this.connectionMetrics.averageResponseTime>2e3&&e.push("Langsame Verbindung erkannt - √úberpr√ºfen Sie Ihre Netzwerkgeschwindigkeit"),this.connectionMetrics.failedConnections>5&&e.push("H√§ufige Verbindungsfehler - √úberpr√ºfen Sie Ihre Netzwerkstabilit√§t"),e}destroy(){this.healthCheckTimer&&clearInterval(this.healthCheckTimer),this.reconnectTimer&&clearTimeout(this.reconnectTimer),this.keepAliveTimer&&clearInterval(this.keepAliveTimer),this.listeners=[]}}const L=new I;function O(){return y||L.isConnected}class N{constructor(){this.cache=new Map,this.pendingRequests=new Map,this.cacheExpiry=new Map,this.defaultCacheTTL=3e4,this.batchQueue=[],this.batchTimer=null,this.batchDelay=100,this.validationRules=this.initValidationRules()}initValidationRules(){return{players:{name:{required:!0,type:"string",minLength:1},team:{required:!0,type:"string"},value:{required:!1,type:"number",min:0},goals:{required:!1,type:"number",min:0},position:{required:!1,type:"string"}},matches:{date:{required:!0,type:"string"},teama:{required:!0,type:"string"},teamb:{required:!0,type:"string"},goalsa:{required:!0,type:"number",min:0},goalsb:{required:!0,type:"number",min:0},goalslista:{required:!1},goalslistb:{required:!1},yellowa:{required:!1,type:"number",min:0},reda:{required:!1,type:"number",min:0},yellowb:{required:!1,type:"number",min:0},redb:{required:!1,type:"number",min:0},manofthematch:{required:!1,type:"string"},prizeaek:{required:!1,type:"number"},prizereal:{required:!1,type:"number"}},bans:{player_id:{required:!1,type:"number"},team:{required:!0,type:"string"},type:{required:!0,type:"string"},totalgames:{required:!0,type:"number",min:0},matchesserved:{required:!1,type:"number",min:0},reason:{required:!1,type:"string"}},transactions:{date:{required:!0,type:"string"},type:{required:!0,type:"string"},team:{required:!0,type:"string"},amount:{required:!0,type:"number"},info:{required:!1,type:"string"},match_id:{required:!1,type:"number"}},finances:{team:{required:!0,type:"string"},balance:{required:!1,type:"number"},debt:{required:!1,type:"number"}},spieler_des_spiels:{name:{required:!0,type:"string",minLength:1},team:{required:!0,type:"string"},count:{required:!1,type:"number",min:0}}}}validateData(e,s){const t=this.validationRules[e];if(!t)return{valid:!0};const n=[];for(const[i,c]of Object.entries(t)){const a=s[i];if(c.required&&(a==null||a==="")){n.push(`${i} ist erforderlich`);continue}!c.required&&(a==null||a==="")||(c.type==="string"&&typeof a!="string"?n.push(`${i} muss ein Text sein`):c.type==="number"&&(typeof a!="number"||isNaN(a))&&n.push(`${i} muss eine Zahl sein`),c.type==="string"&&typeof a=="string"&&(c.minLength&&a.length<c.minLength&&n.push(`${i} muss mindestens ${c.minLength} Zeichen haben`),c.maxLength&&a.length>c.maxLength&&n.push(`${i} darf maximal ${c.maxLength} Zeichen haben`)),c.type==="number"&&typeof a=="number"&&(c.min!==void 0&&a<c.min&&n.push(`${i} muss mindestens ${c.min} sein`),c.max!==void 0&&a>c.max&&n.push(`${i} darf maximal ${c.max} sein`)),c.enum&&!c.enum.includes(a)&&n.push(`${i} muss einer der folgenden Werte sein: ${c.enum.join(", ")}`))}return{valid:n.length===0,errors:n}}sanitizeData(e){const s={};for(const[t,n]of Object.entries(e))typeof n=="string"?s[t]=n.trim().replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,""):s[t]=n;return s}getCacheKey(e,s={}){return`${e}:${JSON.stringify(s)}`}isCacheValid(e){const s=this.cacheExpiry.get(e);return s&&Date.now()<s}setCache(e,s,t=this.defaultCacheTTL){this.cache.set(e,s),this.cacheExpiry.set(e,Date.now()+t)}getCache(e){return this.isCacheValid(e)?this.cache.get(e):(this.cache.delete(e),this.cacheExpiry.delete(e),null)}invalidateCache(e=null){if(e)for(const s of this.cache.keys())s.includes(e)&&(this.cache.delete(s),this.cacheExpiry.delete(s));else this.cache.clear(),this.cacheExpiry.clear()}async executeWithRetry(e,s=3){if(!O())throw new Error("Keine Datenbankverbindung verf√ºgbar. Bitte sp√§ter versuchen.");let t;for(let n=1;n<=s;n++)try{const i=await e();if(i&&i.error)throw i.error;return i}catch(i){if(t=i,console.warn(`Database operation failed (attempt ${n}/${s}):`,i),n===s||this.isNonRetryableError(i))break;const c=Math.min(1e3*Math.pow(2,n-1),5e3);await new Promise(a=>setTimeout(a,c))}throw t}isNonRetryableError(e){if(!e)return!1;const s=e.message||"";return s.includes("auth")||s.includes("permission")||s.includes("constraint")||e.code==="PGRST301"||e.code==="PGRST116"}async batchedSelect(e){return(await Promise.allSettled(e.map(t=>this.select(t.table,t.query,t.options)))).map((t,n)=>({key:e[n].key,success:t.status==="fulfilled",data:t.status==="fulfilled"?t.value:null,error:t.status==="rejected"?t.reason:null}))}async select(e,s="*",t={}){const n=this.getCacheKey(e,{query:s,options:t}),i=this.getCache(n);if(i!==null)return{data:i,fromCache:!0};if(this.pendingRequests.has(n))return this.pendingRequests.get(n);const c=this.executeWithRetry(async()=>{let a=g.from(e).select(s);return t.eq&&Object.entries(t.eq).forEach(([o,h])=>{a=a.eq(o,h)}),t.order&&(a=a.order(t.order.column,{ascending:t.order.ascending??!0})),t.limit&&(a=a.limit(t.limit)),t.range&&(a=a.range(t.range.from,t.range.to)),await a}).then(a=>(this.pendingRequests.delete(n),a&&a.data&&this.setCache(n,a.data),a)).catch(a=>{throw this.pendingRequests.delete(n),a});return this.pendingRequests.set(n,c),c}async insert(e,s){const t=this.sanitizeData(s),n=this.validateData(e,t);if(!n.valid)throw new Error(`Validierungsfehler: ${n.errors.join(", ")}`);const i=await this.executeWithRetry(async()=>await g.from(e).insert([t]).select());return this.invalidateCache(e),i}async update(e,s,t){const n=this.sanitizeData(s),i=this.validateData(e,n);if(!i.valid)throw new Error(`Validierungsfehler: ${i.errors.join(", ")}`);const c=await this.executeWithRetry(async()=>await g.from(e).update(n).eq("id",t).select());return this.invalidateCache(e),c}async delete(e,s){if(!s)throw new Error("ID ist erforderlich zum L√∂schen");const t=await this.executeWithRetry(async()=>await g.from(e).delete().eq("id",s));return this.invalidateCache(e),t}async upsert(e,s){const t=this.sanitizeData(s),n=this.validateData(e,t);if(!n.valid)throw new Error(`Validierungsfehler: ${n.errors.join(", ")}`);const i=await this.executeWithRetry(async()=>await g.from(e).upsert(t).select());return this.invalidateCache(e),i}async getPlayersByTeam(e){return this.select("players","*",{eq:{team:e}})}async getAllPlayers(){return this.select("players","*")}async getAllMatches(){return this.select("matches","*",{order:{column:"id",ascending:!1}})}async getBans(){return this.select("bans","*")}async getFinances(){return this.select("finances","*")}async getTransactions(){return this.select("transactions","*",{order:{column:"id",ascending:!1}})}async getSpielerDesSpiels(){return this.select("spieler_des_spiels","*")}async loadAllAppData(){const e=[{key:"matches",table:"matches",query:"*",options:{order:{column:"id",ascending:!1}}},{key:"players",table:"players",query:"*",options:{}},{key:"bans",table:"bans",query:"*",options:{}},{key:"finances",table:"finances",query:"*",options:{}},{key:"transactions",table:"transactions",query:"*",options:{order:{column:"id",ascending:!1}}},{key:"spieler_des_spiels",table:"spieler_des_spiels",query:"*",options:{}}],s=await this.batchedSelect(e),t={};for(const n of s)n.success?t[n.key]=n.data.data||[]:(console.error(`Failed to load ${n.key}:`,n.error),t[n.key]=[]);return t.matches&&(t.matches=t.matches.map(n=>{try{typeof n.goalslista=="string"&&(n.goalslista=JSON.parse(n.goalslista)),typeof n.goalslistb=="string"&&(n.goalslistb=JSON.parse(n.goalslistb)),Array.isArray(n.goalslista)||(n.goalslista=[]),Array.isArray(n.goalslistb)||(n.goalslistb=[])}catch(i){console.warn("Error parsing goals for match",n.id,i),n.goalslista=[],n.goalslistb=[]}return n})),t}async healthCheck(){try{return await this.select("players","id",{limit:1}),!0}catch(e){return console.error("Health check failed:",e),!1}}}const B=new N;export{B as d,g as s};
