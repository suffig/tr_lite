const y="alcoholCalculatorValues",m="1.0",d=()=>({aekPlayer:"",realPlayer:"",aekGoals:0,realGoals:0,mode:"manual",gameDay:new Date().toISOString().split("T")[0],beerCount:{aek:0,real:0},alexanderShots:{cl40:0,cl20:0},philipShots:{cl40:0,cl20:0},cumulativeShots:{aek:0,real:0,total:0,lastMatchId:null,lastUpdated:null},lastUpdated:new Date().toISOString(),drinkingStartTime:null,version:m}),h=()=>{try{const e=localStorage.getItem(y);if(!e)return d();const t=JSON.parse(e);if(!t.version||t.version!==m)return console.log("Alcohol calculator: Version mismatch, using defaults"),d();const a=d();return{...a,...t,beerCount:{...a.beerCount,...t.beerCount||{}},alexanderShots:{...a.alexanderShots,...t.alexanderShots||{}},philipShots:{...a.philipShots,...t.philipShots||{}},cumulativeShots:{...a.cumulativeShots,...t.cumulativeShots||{}}}}catch(e){return console.error("Error loading alcohol calculator values:",e),d()}},M=e=>{try{const t={...e,lastUpdated:new Date().toISOString(),version:m};return localStorage.setItem(y,JSON.stringify(t)),typeof window<"u"&&window.dispatchEvent(new CustomEvent("alcoholCalculatorValuesChanged",{detail:t})),!0}catch(t){return console.error("Error saving alcohol calculator values:",t),!1}},k=(e,t)=>{const a={...t,...e,lastUpdated:new Date().toISOString()};return e.beerCount&&(a.beerCount={...t.beerCount,...e.beerCount}),e.cumulativeShots&&(a.cumulativeShots={...t.cumulativeShots,...e.cumulativeShots}),M(a),a},O=e=>{if(!e.drinkingStartTime)return 0;try{const t=new Date(e.drinkingStartTime);return(new Date-t)/36e5}catch(t){return console.error("Error calculating time since drinking started:",t),0}},A=(e,t=null)=>{try{const a=t||h();if(!e||!Array.isArray(e))return console.warn("Invalid matches array provided to updateCumulativeShotsFromMatches"),a;let s=0,c=0;const l=e.slice().sort((n,u)=>{const r=new Date(n.date||0),i=new Date(u.date||0);return r-i}),o={};l.forEach(n=>{const r=new Date(n.date||0).toDateString();o[r]||(o[r]=[]),o[r].push(n)}),Object.keys(o).forEach(n=>{const u=o[n];let r=0,i=0,v=0,g=0;u.forEach(p=>{const D=p.goalsa||0,I=p.goalsb||0;r+=D,i+=I;const f=Math.floor(i/2),w=Math.floor(r/2),b=(f-v)*2,E=(w-g)*2;s+=b,c+=E,v=f,g=w})});const S=l.length>0?l[l.length-1]:null,C=S?S.id:null;return k({cumulativeShots:{aek:s,real:c,total:s+c,lastMatchId:C,lastUpdated:new Date().toISOString()}},a)}catch(a){return console.error("Error updating cumulative shots from matches:",a),t||h()}},T=(e,t=null)=>{try{const a=t||h();if(!e||typeof e!="object")return console.warn("Invalid match object provided to addShotsFromNewMatch"),a;const s=e.goalsa||0,c=e.goalsb||0,l=Math.floor(c/2)*2,o=Math.floor(s/2)*2;return k({cumulativeShots:{aek:a.cumulativeShots.aek+l,real:a.cumulativeShots.real+o,total:a.cumulativeShots.total+l+o,lastMatchId:e.id,lastUpdated:new Date().toISOString()}},a)}catch(a){return console.error("Error adding shots from new match:",a),t||h()}};typeof window<"u"&&(window.updateAlcoholCalculatorFromMatch=e=>{try{T(e)}catch(t){console.warn("Failed to update alcohol calculator from match:",t)}});export{k as a,T as b,O as g,h as l,A as u};
